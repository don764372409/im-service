syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.master.world.bean";
option java_outer_classname = "BtcAddressProto";
option go_package = "service/v1;api";
option objc_class_prefix = "World";

enum ResultDTOCode {
  DEFAULT = 0;
  SUCCESS = 200;
  ERROR = 500;
  /** 跳转2级密码输入页 */
  TO_INPUT_PWD2 = 2000;
}
message VersionReq{
  int32 versionCode = 1;//数字版本 比如：123
  int32 type = 2;//1-Android 2-IOS
}
/** 动态的回复请求对象 */
message ReplyReq{
  uint64 moodId = 1;//哪条动态
  uint64 replyUserId = 2;//回复某人
  string content = 3;//回复内容
}
/** 查询动态列表请求对象 */
message MoodPageReq{
  int32 page = 1;//页码
  int32 pageSize = 2;//每页显示条数
  uint64 userId = 3;//只查某个用户 不传就是查全部
}
/** 动态请求对象 */
message MoodReq{
  uint64 id = 1;//删除时使用
  string content = 2;// 添加时使用
  string urls = 3;//添加时使用 可以为null,json字符串
  int32 type = 4;//1-正常 2-匿名发布
}
/** 充值请求对象 */
message WithdrawalReq{
  string money = 1;
  string address = 2;
}
/** 充值请求对象 */
message RechargeOrderReq{
  int32 type = 1;
  string value = 2;
}
/** 查询消息列表请求对象 */
message MsgPageReq{
  string type = 1;//聊天类型 friend、group
  uint64 target = 2;//聊天目标 用户ID或群ID
  uint64 time = 3;//消息发送时间 查询此时间之前的消息
}

message ChatReq{
  string type = 1; // 聊天类型 friend, group
  uint64 target = 2; // 聊天目标 用户ID或群ID
  string no = 3;//消息ID 客户端通过UUID生成 发送成功失败时根据此ID获取消息客户端并修改状态
  MessageData content = 4; // 聊天内容 仅发生消息时传
}
message FileDecryptResp{
  string no = 1;//消息ID
  bytes data = 2;//文件路径
  int32 state = 3;//1-成功 -1-失败 为1时data有值
  string ext = 4;//如果消息类型为2-图片 没有值 为3-语音 代表语音秒数 为4-视频时长 为5-文件 没有值
  bytes ext2 = 5;//如果为4-视频 此属性才有值 为预览图二进制数据
}
/** 消息内容 */
message MessageData{
  int32 type = 1;//1-文本 2-图片 3-语音 4-视频 5-文件
  string content = 2;//消息内容 1-文本消息 如："hello" 2-图片链接,客户端传本地路径,SDK负责上传并更改此链接为网络路径// 如："www.baidu.com"或 "/var/temp/1.jpg" 3-语音链接 如：{"url":"var/temp/1.mp3",""duration":60} 4-视频链接 如：{"url":"var/temp/1.mp4","img":"www.baidu.com"} 5-文件链接 如："var/temp/1.docx"
  bytes data = 3;//PC端上传的二进制数据
}
/** 好友详情页根据ID获取好友数据 */
message FriendReq{
  uint64 id = 1; //好友ID 就是用户ID
  string name = 2; //好友备注 查询/删除时留空，修改好友备注时传入
}
/** 搜索用户、群聊得到的请求参数 */
message SearchReq{
  string keyword = 1; // 搜索关键字
}
/** 好友请求参数 */
message FriendApplyReq{
  uint64 id = 1;//添加好友时是用户ID 同意或拒绝好友时是新朋友记录ID
  string remark = 2;//备注 同意或拒绝时留空
  int32 state = 3;//1-申请中 -1拒绝 2同意 操作时传，添加时留空
}
/** 修改用户信息的请求参数 */
message UpdateUserReq{
  string data = 1;//可以是昵称、签名、邮箱、头像
}
message UpdatePwdReq{
  string pwd = 1;
  string oldPwd = 2;//旧密码
  string newPwd = 3;//新密码
}
message UploadReq{
  string path = 1; // 文件路径 包含路径和文件名 列如 C:\\Users\\Administrator\\Desktop\\result.png
  bytes data = 2; // 文件二进制数据
}
/** 注册 */
message UserReq{
  uint64 id = 1;
  string  username = 2;
  string  password = 3;
}

message ConfigReq {
  string baseDir = 1; //配置根目录
  DeviceType deviceType = 2; //设备类型
  LogSwitch logSwitch = 3; //日志开关
  string ApiHost = 4;
  string WsHost = 5;
  enum LogSwitch{
    LogSwitchUNKNOWN = 0;
    CLOSE = 2;        //关闭日志
    CONSOLE = 3;      //控制台日志
    FILE = 4;         //文件日志
    CONSOLE_FILE = 5; //控制台+文件
  }

  enum DeviceType {
    Unknown = 0;
    PC = 1;     // 电脑端
    Android = 2; // 手机端
    IOS = 3;    // IOS
    H5 = 4;     // H5
  }
}
message ResultDTOResp{
  uint32 code = 1;
  string msg = 2;
  string body = 3;
}